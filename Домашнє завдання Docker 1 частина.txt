Задача 1.1
В этом задании надо последовательно ответить на несколько вопросов:

1. Чем контейнер отличается от образа?
Контейнери швидші.
Використання ресурсів нижче.
Образ контейнера важить менше.
2. Сколько контейнеров можно сделать от одного образа?
Безліч.
3. Для чего используется ключ -p в команде docker run
За допомогою нього можна прив’язати порти контейнера до певного порту.
4. Почему не бывает образов с операционной системой Windows и MacOS внутри?
Система має відноситься до Linux, в якому вже працює докер, а на Windows i MacOs працює несправжній докер і вони не можуть виступати хост машинами.
5. Где находится информация, которая хранится в томе (docker volume)?
В недрах docker demon.
У томі Linux знаходяться за замовчуванням в /var/lib/docker/volumes/ . Інші програми не повинні отримувати доступ безпосередньо через контейнер.
6. Как запустить контейнер так, чтобы он видел содержимое какой-то директории на хост-машине, но не мог ее изменить?
Змонтувати кореневу файлову систему контейнера лише для читання за допомогою --read-only.

Задача 1.2
В этой задаче надо выполнить несколько последовательных шагов:
Результат: указать 11 последовательных команд, которые вы сделали для прохождения этого флоу.

1. Запустить контейнер Ubuntu с detached флагом.
docker run -it -d ubuntu bash
2. Найти запущенный контейнер в списке контейнеров.
docker container ls
3. Подключиться к нему.
docker container attach 00f7029de626
4. Выйти из него командой exit (тем самым остановив контейнер).
exit
5. Снова найти контейнер в списке контейнеров.
docker container ls -a
6. Запустить его.
docker start cool_bardeen
7. Подключиться к нему.
docker container attach cool_bardeen
8. Выйти из контейнера, не остановив его.
Ctrl + P
Ctrl + Q
9. Найти запущенный контейнер в списке.
docker container ls
10. Остановить его.
docker container stop 00f7029de626
11. Удалить его из списка.
docker container rm cool_bardeen

Задача 1.3
В этой задаче надо выполнить несколько последовательных шагов:


1. Создать том с названием my_homework_volume
docker volume create my_homework_volume
2. Запустить контейнер Ubuntu с названием container_1 и подключенным к нему томом.
docker run -it --name container_1 --mount type=volume,src=my_homework_volume,target=/volume/ ubuntu bash
3. Оказавшись внутри контейнера container_1, перейти в директорию тома и создать там файл hello.txt без содержимого. Для этого используйте команду touch [название файла].
touch volume/hello.txt
4. Выйти из контейнера.
exit
5. Создать второй контейнер Ubuntu с названием container_2 и с тем же подключенным томом.
docker run -it --name container_2 --mount type=volume,src=my_homework_volume,target=/volume/ ubuntu bash
6. Оказавшись внутри контейнера container_2, перейти в директорию тома и найти там файл hello.txt (команда ls). Удалить файл командой rm.
ls volume
rm volume/hello.txt
7. Выйти из контейнера container_2 и вернуться в container_1. Перейдя в директорию с томом при помощи команды ls проверить наличие созданного файла hello.txt.
exit
docker start container_1
docker attach container_1
ls volume
8. Выйти из контейнера.
exit
9. Попытаться удалить том, выполнив команду docker volume rm my_homework_volume


Результатом должны быть ответы на все три вопроса:

 
1. Удалось ли найти созданный файл hello.txt внутри container_1 после того, как вы удалили файл внутри container_2?
Ні
2. Какая ошибка возникла при попытке удалить том?
Error response from daemon: remove my_homework_volume: volume is in use - [b701a9d22ad195dffdcb047255f2471792ecd45f5af806a9b971a1b86a04a5d0, 9a3422834a5ed7119acd859563178ba285dd696bbd55c2e9a533a17ddf8dab1e]
3. Что необходимо сделать, чтобы том был удален?
Видалити контейнери, які підключені до тома.

Задача 1.4
Есть код на языке PHP:

 
<?php foreach ([1,2,3] as $i) {echo $i . PHP_EOL;}

 
Этот код необходимо скопировать и положить в файл counter.php

После чего необходимо скачать два образа:

 
docker pull php:5.3-cli

docker pull php:5.6-cli


После чего необходимо запустить программу на php в обоих контейнерах и проверить ее работоспособность. 
Для одного из контейнеров программа сломается - это ожидаемо.


Для запуска программы на PHP используйте следующую команду:

php counter.php


Результатом должны быть ответы на все три вопроса:

1. Какой тип mount выбрали - bind или volume? Почему?
bind, тому що цей тип працює з абсолютним шляхом на головній машині і не потрібно створювати том, поміщати туди файл і використовувати, все можна зробити простіше через тип bind.
2. Что вывела программа, запущенная внутри контейнера версии 5.3?
Parse error: syntax error, unexpected '[' in /src/counter.php on line 1
3. Что вывела программа, запущенная внутри контейнера версии 5.6?
Status: Downloaded newer image for php:5.6
1
2
3

Задача 1.5
Необходимо сделать свой собственный hello-world образ и выложить его в свой репозиторий на Docker Hub.

При запуске контейнера должно писаться следующее:

Hello from [Ваше Имя]

После чего контейнер должен останавливаться.

Для того, чтобы выводить сообщение используйте команду echo.

 
Результат: https://hub.docker.com/repository/docker/diankavoy/hello-world.